#!/usr/bin/env bash

GNU_CC_COMPILER=gcc
GNU_CXX_COMPILER=g++
CLANG_CC_COMPILER=clang
CLANG_CXX_COMPILER=clang++
CXX_FLAGS="-I./ -g -O0 -Wall -pedantic -std=c++11"
CXX_LDFLAGS="-lpthread"

EXECUTABLE_NAME=testExe
LOGFILE=compile.log

function log_success
{
    echo "[  OK  ] $1"
}

function log_failure
{
    echo "[ FAIL ] $1"
}

function log_info
{
    echo "[ INFO ] $1"
}

function handle_executable_output
{
    if [ $1 == 0 ]
    then
        log_success "FINISHED"
    elif [ $1 == 137 ]
    then
        CORE_FILE=`find -name core*`
        gdb $EXECUTABLE_NAME $CORE_FILE
        rm -f $CORE_FILE
    else
        log_failure "EXECUTION (error code: $1)"
    fi
}

function compile
{
    if [ -f $2 ]
    then
        log_success "SET-UP"
        $1 -o $EXECUTABLE_NAME -L./ $CXX_FLAGS  $2 $CXX_LDFLAGS &> $LOGFILE
        if [ $? == 0 ]
        then
            log_success "COMPILATION"
            log_info "STARTING..."
            ./$EXECUTABLE_NAME
            handle_executable_output $?
        else
            log_failure "COMPILATION"
            log_info "VIEWING LOGS..."
            vim -o $LOGFILE
        fi
    else
        log_failure "SET-UP ($2: no such file)"
    fi
    rm -f $LOGFILE
    log_success "TEAR-DOWN"
}

function compile_with_gnu
{
    case "$1" in
        *.c) compile $GNU_CC_COMPILER $1 ;;
        *.cc|*.cpp ) compile $GNU_CXX_COMPILER $1 ;;
        *) log_failure "SET-UP ($1: unrecognized file extension)"
    esac
}

function compile_with_clang
{
    case "$1" in
        *.c) compile $CLANG_CC_COMPILER $1 ;;
        *.cc|*.cpp) compile $CLANG_CXX_COMPILER $1 ;;
        *) log_failure "SET-UP ($1: unrecognized file extension)"
    esac
}

case "$1" in
  [gG][nN][uU]) compile_with_gnu $2 ;;
  [cC][lL][aA][nN][gG]) compile_with_clang $2 ;;
  [hH][eE][lL][pP]) print_help ;;
  *) compile_with_gnu $1
esac
